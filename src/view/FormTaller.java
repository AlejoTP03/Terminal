/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import interfaces.IServiciosOmnibus;
import interfaces.IServiciosTaller;
import utils.MostrarTablaTaller;
import java.sql.Connection;
import java.time.LocalDate;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import persistence.ConexionDataBase;
import services.ServiciosOmnibus;
import services.ServiciosTaller;
import utils.GenerarPdf;

/**
 *
 * @author PC
 */
public class FormTaller extends javax.swing.JDialog {

    /**
     * Creates new form FormTaller
     */
    private MostrarTablaTaller mostrarTablaTaller;
    private Connection conectar = ConexionDataBase.getConnection();
    IServiciosTaller iServiciosTaller = new ServiciosTaller();
    public FormTaller(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        mostrarTablaTaller = new MostrarTablaTaller(conectar);
        llenarTablaTaller();
        createPopupMenu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMostrarTaller = new javax.swing.JTable();
        jButtonReporteTaller = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemMostrarInformacionTaller = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestión del Taller");

        jPanel1.setOpaque(false);

        jTableMostrarTaller.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTableMostrarTaller.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                " Matrícula", "Marca", "Modelo", "Destino", "Capacidad", "Hora de Salida", "País de Procedencia", "idTaller"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableMostrarTaller);

        jButtonReporteTaller.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonReporteTaller.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/folder_archive_icon_181539.png"))); // NOI18N
        jButtonReporteTaller.setText("Reporte");
        jButtonReporteTaller.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReporteTallerActionPerformed(evt);
            }
        });

        jButtonEliminar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete_remove_close_icon_181533.png"))); // NOI18N
        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonEliminar)
                .addGap(18, 18, 18)
                .addComponent(jButtonReporteTaller)
                .addGap(18, 18, 18))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonReporteTaller)
                    .addComponent(jButtonEliminar))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        jDesktopPane1.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jMenu1.setText("Informacion");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItemMostrarInformacionTaller.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jMenuItemMostrarInformacionTaller.setText("Informacion del Taller");
        jMenuItemMostrarInformacionTaller.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMostrarInformacionTallerActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemMostrarInformacionTaller);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jMenuItemMostrarInformacionTallerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMostrarInformacionTallerActionPerformed
        // TODO add your handling code here:
        FormInformacionTaller formInformacionTaller = new FormInformacionTaller(this, true);
        formInformacionTaller.setVisible(true);
    }//GEN-LAST:event_jMenuItemMostrarInformacionTallerActionPerformed

    private void jButtonReporteTallerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReporteTallerActionPerformed
        // TODO add your handling code here:
        JTable tabla = jTableMostrarTaller;
        GenerarPdf generarPDF = new GenerarPdf();
        generarPDF.generarPDFTaller(tabla);
        JOptionPane.showMessageDialog(this, "Reporte generado con éxito");
    }//GEN-LAST:event_jButtonReporteTallerActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTableMostrarTaller.getSelectedRow();
        if (selectedRow != -1) {
            // Obtener el valor de la primera columna (por ejemplo, la matrícula del ómnibus)
            String matricula = jTableMostrarTaller.getValueAt(selectedRow, 0).toString();

            // Verificar si la matrícula está asociada a algún conductor
            IServiciosOmnibus iServiciosOmnibus = new ServiciosOmnibus();
            if (iServiciosOmnibus.matriculaAsociadaAConductor(matricula)) {
                JOptionPane.showMessageDialog(null, "No se puede eliminar el ómnibus porque está asociado a un conductor.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Confirmar la eliminación
            int response = JOptionPane.showConfirmDialog(null, "¿Estás seguro de que deseas eliminar este objeto?",
                    "Confirmar eliminación", JOptionPane.YES_NO_OPTION);

            if (response == JOptionPane.YES_OPTION) {
                // Llamar al método eliminarOmnibus en la clase ServiciosOmnibus
                boolean eliminado = iServiciosTaller.eliminarOmnibus(matricula);
                if (eliminado) {
                    JOptionPane.showMessageDialog(null, "Ómnibus eliminado correctamente.");
                } else {
                    JOptionPane.showMessageDialog(null, "No se encontró el ómnibus con la matrícula especificada.");
                }

                // Actualizar la tabla después de eliminar
                llenarTablaTaller();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Por favor, selecciona una fila primero.");
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormTaller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormTaller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormTaller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormTaller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FormTaller dialog = new FormTaller(new javax.swing.JDialog(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonReporteTaller;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemMostrarInformacionTaller;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableMostrarTaller;
    // End of variables declaration//GEN-END:variables


    public void llenarTablaTaller(){
        DefaultTableModel modelo = mostrarTablaTaller.obtenerTaller();
        jTableMostrarTaller.setModel(modelo);
    }
    
    private void createPopupMenu() {
        JPopupMenu popupMenu = new JPopupMenu();
        JMenuItem enviarAlTaller = new JMenuItem("Poner Omnibus Disponible");

        enviarAlTaller.addActionListener(e -> enviarOmnibusAlTaller());

        popupMenu.add(enviarAlTaller);

        jTableMostrarTaller.setComponentPopupMenu(popupMenu);
    }
    
    private void enviarOmnibusAlTaller() {
        int selectedRow = jTableMostrarTaller.getSelectedRow();
        if (selectedRow != -1) {
            String matricula = (String) jTableMostrarTaller.getValueAt(selectedRow, 0);

            boolean exito = iServiciosTaller.ponerDisponible(matricula);

                if (exito) {
                    JOptionPane.showMessageDialog(this, "Ómnibus disponible nuevamente.");
                    llenarTablaTaller();
                } else {
                    JOptionPane.showMessageDialog(this, "Hubo un problema al poner el omnibus operativo. Inténtalo de nuevo.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona un ómnibus de la tabla.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    public void mouseLister(){ 
        jTableMostrarTaller.addMouseListener(new java.awt.event.MouseAdapter() {
        @Override
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            int selectedRow = jTableMostrarTaller.getSelectedRow();
            if (selectedRow != -1) {
                // Obtener el valor de la primera columna (por ejemplo, la matrícula del ómnibus)
                String matricula = jTableMostrarTaller.getValueAt(selectedRow, 0).toString();

                // Confirmar la eliminación
                int response = JOptionPane.showConfirmDialog(null, "¿Estás seguro de que deseas eliminar este objeto?",
                        "Confirmar eliminación", JOptionPane.YES_NO_OPTION);

                if (response == JOptionPane.YES_OPTION) {
                    // Llamar al método eliminarOmnibus en la clase ServiciosOmnibus
                    boolean eliminado = iServiciosTaller.eliminarOmnibus(matricula);
                    if (eliminado) {
                        JOptionPane.showMessageDialog(null, "Ómnibus eliminado correctamente.");
                    } else {
                        JOptionPane.showMessageDialog(null, "No se encontró el ómnibus con la matrícula especificada.");
                    }

                    // Actualizar la tabla después de eliminar
                    llenarTablaTaller();
                }
            }
        }
        });
    }
}
