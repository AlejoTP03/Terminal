/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import interfaces.IServiciosTicket;
import persistence.ConexionDataBase;
import utils.MostrarTablaTicket;
import java.sql.Connection;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.SwingWorker;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import services.ServiciosTicket;
import utils.GenerarPdf;



/**
 *
 * @author PC
 */
public class FormTicket extends javax.swing.JDialog {

    /**
     * Creates new form FormTicket
     */
    private MostrarTablaTicket mostrarTablaTicket;
    private Connection conectar = ConexionDataBase.getConnection();
    IServiciosTicket iServiciosTicket = new ServiciosTicket();
    public FormTicket(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        mostrarTablaTicket = new MostrarTablaTicket(conectar);
        llenarTablaTickets();
        createPopupMenu();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMostrarTicket = new javax.swing.JTable();
        jButtonAgregarTicket = new javax.swing.JButton();
        jButtonReporteTickets = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonBuscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestion Ticket");
        setResizable(false);

        jPanel2.setOpaque(false);

        jTableMostrarTicket.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTableMostrarTicket.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "idTicket", "Nombre", "Apellido", "CI ", "Fecha de Salida", "Matricula"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMostrarTicket.setToolTipText("");
        jTableMostrarTicket.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMostrarTicketMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableMostrarTicket);

        jButtonAgregarTicket.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonAgregarTicket.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus_insert_add_new_icon_181537.png"))); // NOI18N
        jButtonAgregarTicket.setText("Agregar");
        jButtonAgregarTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarTicketActionPerformed(evt);
            }
        });

        jButtonReporteTickets.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonReporteTickets.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/folder_archive_icon_181539.png"))); // NOI18N
        jButtonReporteTickets.setText("Reporte");
        jButtonReporteTickets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReporteTicketsActionPerformed(evt);
            }
        });

        jButtonEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete_remove_close_icon_181533.png"))); // NOI18N
        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonBuscar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/48search_locate_find_icon-icons.com_67287.png"))); // NOI18N
        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonBuscar)
                .addGap(18, 18, 18)
                .addComponent(jButtonReporteTickets)
                .addGap(18, 18, 18)
                .addComponent(jButtonEliminar)
                .addGap(18, 18, 18)
                .addComponent(jButtonAgregarTicket)
                .addGap(18, 18, 18))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAgregarTicket)
                    .addComponent(jButtonEliminar)
                    .addComponent(jButtonReporteTickets)
                    .addComponent(jButtonBuscar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jDesktopPane1.setLayer(jPanel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAgregarTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarTicketActionPerformed
        // TODO add your handling code here:
        FormAgregarTicket formAgregarTicket = new FormAgregarTicket(this, this, true);
        formAgregarTicket.setVisible(true);
    }//GEN-LAST:event_jButtonAgregarTicketActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:
        // Depuración inicial
        System.out.println("Botón Eliminar presionado"); // Mensaje de depuración

        int selectedRow = jTableMostrarTicket.getSelectedRow(); 
        System.out.println("Fila seleccionada: " + selectedRow); // Depuración

        if (selectedRow != -1) {
            int ticketId = Integer.parseInt(jTableMostrarTicket.getValueAt(selectedRow, 0).toString()); 
            System.out.println("ID del ticket: " + ticketId); // Depuración

            int confirm = JOptionPane.showConfirmDialog(this, "¿Estás seguro de que deseas eliminar este ticket?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                boolean eliminado = iServiciosTicket.eliminarTicket(ticketId);

                if (eliminado) {
                    JOptionPane.showMessageDialog(this, "El ticket ha sido eliminado correctamente.");
                    llenarTablaTickets(); 
                } else {
                    JOptionPane.showMessageDialog(this, "Error al eliminar el ticket.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona un ticket para eliminar.");
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jTableMostrarTicketMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMostrarTicketMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableMostrarTicketMouseClicked

    private void jButtonReporteTicketsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReporteTicketsActionPerformed
        // TODO add your handling code here:
        JTable tabla = jTableMostrarTicket;
        GenerarPdf generarPDF = new GenerarPdf();
        generarPDF.generarPDFTicket(tabla);
        JOptionPane.showMessageDialog(this, "Reporte generado con éxito");
    }//GEN-LAST:event_jButtonReporteTicketsActionPerformed

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        // TODO add your handling code here:
        FormBuscarTicket formbuscarticket = new FormBuscarTicket(this, true);
        formbuscarticket.setVisible(true);
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FormTicket dialog = new FormTicket(new javax.swing.JDialog(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAgregarTicket;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonReporteTickets;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableMostrarTicket;
    // End of variables declaration//GEN-END:variables

    
    public void llenarTablaTickets() {
        DefaultTableModel modelo = mostrarTablaTicket.obtenerTickets();
        jTableMostrarTicket.setModel(modelo);
    }
    
    private void abrirJDialogModificarTicket() {
        int selectedRow = jTableMostrarTicket.getSelectedRow();

        if (selectedRow != -1) {
            try {
                int idTicket = (int) jTableMostrarTicket.getValueAt(selectedRow, 0);
                System.out.println(idTicket);

                FormModificarTicket formModificarTicket = new FormModificarTicket(this, true, idTicket);
                formModificarTicket.setVisible(true);
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona un ticket de la tabla.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    } 
    
    
    
    private void createPopupMenu() {
        JPopupMenu popupMenu = new JPopupMenu();
        JMenuItem modificarTicket = new JMenuItem("Modificar informacion");

        modificarTicket.addActionListener(e -> abrirJDialogModificarTicket());

        popupMenu.add(modificarTicket);

        jTableMostrarTicket.setComponentPopupMenu(popupMenu);
    }
    
    
}
