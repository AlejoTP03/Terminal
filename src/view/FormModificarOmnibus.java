/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import domain.Omnibus;
import interfaces.IServiciosOmnibus;
import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import services.ServiciosOmnibus;
import utils.MostrarTablaOmnibus;
import utils.TraerIdTaller;
import utils.VerificarEntradaDeHora;

/**
 *
 * @author Lenovo
 */
public class FormModificarOmnibus extends javax.swing.JDialog {

    /**
     * Creates new form FormModificarOmnibus
     */
    VerificarEntradaDeHora entradaHora = new VerificarEntradaDeHora();
    IServiciosOmnibus iServiciosOmnibus = new ServiciosOmnibus();
    private MostrarTablaOmnibus mostrarTablaOmnibus;
    private static FormOmnibus formOmnibus;
    private static FormBuscarOmnibus formBuscarOmnibus;
    TraerIdTaller traerIdTaller = new TraerIdTaller();
    private static String matricula;
    public static String destino;
    private boolean constructorDesdeFormOmnibus;
    public FormModificarOmnibus(javax.swing.JDialog parent, boolean modal, FormOmnibus formOmnibus, String matricula) {
        super(parent, modal);
        initComponents();
        this.formOmnibus = formOmnibus;
        this.matricula = matricula;
        constructorDesdeFormOmnibus = true;
        llenarJTextFieldMatricula();
        llenarJTextFieldMarca();
        llenarJTextFieldModelo();
        llenarJTextFieldModelo();
        llenarJComboBoxDestino();
        llenarJTextFieldCapacidad();
        llenarJTextFieldHoraSalida();
        llenarJTextFieldPaisProcedencia();
    }
    
    public FormModificarOmnibus(javax.swing.JDialog parent, boolean modal, FormBuscarOmnibus formBuscarOmnibus, String matricula, String destino) {
        super(parent, modal);
        initComponents();
        this.formBuscarOmnibus = formBuscarOmnibus;
        this.matricula = matricula;
        this.destino = destino;
        constructorDesdeFormOmnibus = false;
        llenarJTextFieldMatricula();
        llenarJTextFieldMarca();
        llenarJTextFieldModelo();
        llenarJTextFieldModelo();
        llenarJComboBoxDestino();
        llenarJTextFieldCapacidad();
        llenarJTextFieldHoraSalida();
        llenarJTextFieldPaisProcedencia();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        jLabelPaisProcedencia = new javax.swing.JLabel();
        jLabelMatricula = new javax.swing.JLabel();
        jLabelMarca = new javax.swing.JLabel();
        jLabelModelo = new javax.swing.JLabel();
        jLabelDestino = new javax.swing.JLabel();
        jLabelCapacidad = new javax.swing.JLabel();
        jLabelHoraSalida = new javax.swing.JLabel();
        jTextFieldMatricula = new javax.swing.JTextField();
        jTextFieldMarca = new javax.swing.JTextField();
        jTextFieldModelo = new javax.swing.JTextField();
        jComboBoxDestino = new javax.swing.JComboBox<>();
        jTextFieldHoraSalida = new javax.swing.JTextField();
        jTextFieldCapacidad = new javax.swing.JTextField();
        jTextFieldPaisProcedencia = new javax.swing.JTextField();
        jButtonCancelar = new javax.swing.JButton();
        jButtonAceptar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Modificar Informacion");
        setResizable(false);

        jPanel1.setOpaque(false);

        jLabelPaisProcedencia.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelPaisProcedencia.setText("País de Procedencia:");

        jLabelMatricula.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelMatricula.setText("Matricula:");

        jLabelMarca.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelMarca.setText("Marca:");

        jLabelModelo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelModelo.setText("Modelo:");

        jLabelDestino.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelDestino.setText("Destino:");

        jLabelCapacidad.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelCapacidad.setText("Capacidad:");

        jLabelHoraSalida.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelHoraSalida.setText("Hora de Salida:");

        jTextFieldMatricula.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldMatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMatriculaActionPerformed(evt);
            }
        });
        jTextFieldMatricula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldMatriculaKeyTyped(evt);
            }
        });

        jTextFieldMarca.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMarcaActionPerformed(evt);
            }
        });
        jTextFieldMarca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldMarcaKeyTyped(evt);
            }
        });

        jTextFieldModelo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldModelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldModeloActionPerformed(evt);
            }
        });

        jComboBoxDestino.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jComboBoxDestino.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pinar del Río", "Artemisa", "La Habana", "Mayabeque", "Matanzas", "Isla de la Juventud", "Cienfuegos", "Villa Clara", "Sancti Spíritus", "Ciego de Ávila", "Camagüey", "Las Tunas", "Granma", "Holguín", "Santiago de Cuba", "Guantánamo" }));
        jComboBoxDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDestinoActionPerformed(evt);
            }
        });

        jTextFieldHoraSalida.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldHoraSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldHoraSalidaActionPerformed(evt);
            }
        });
        jTextFieldHoraSalida.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldHoraSalidaKeyTyped(evt);
            }
        });

        jTextFieldCapacidad.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextFieldCapacidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCapacidadActionPerformed(evt);
            }
        });
        jTextFieldCapacidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldCapacidadKeyTyped(evt);
            }
        });

        jTextFieldPaisProcedencia.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jButtonCancelar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/forceexit_103817.png"))); // NOI18N
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonAceptar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/anydo_104098.png"))); // NOI18N
        jButtonAceptar.setText("Aceptar");
        jButtonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelHoraSalida)
                    .addComponent(jLabelCapacidad)
                    .addComponent(jLabelDestino)
                    .addComponent(jLabelModelo)
                    .addComponent(jLabelMarca)
                    .addComponent(jLabelMatricula)
                    .addComponent(jLabelPaisProcedencia))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldMatricula)
                    .addComponent(jTextFieldMarca)
                    .addComponent(jTextFieldModelo)
                    .addComponent(jComboBoxDestino, javax.swing.GroupLayout.Alignment.TRAILING, 0, 200, Short.MAX_VALUE)
                    .addComponent(jTextFieldHoraSalida)
                    .addComponent(jTextFieldCapacidad, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextFieldPaisProcedencia))
                .addContainerGap(238, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonCancelar)
                .addGap(18, 18, 18)
                .addComponent(jButtonAceptar)
                .addGap(18, 18, 18))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMatricula)
                    .addComponent(jTextFieldMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMarca)
                    .addComponent(jTextFieldMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelModelo)
                    .addComponent(jTextFieldModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDestino)
                    .addComponent(jComboBoxDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCapacidad)
                    .addComponent(jTextFieldCapacidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelHoraSalida)
                    .addComponent(jTextFieldHoraSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPaisProcedencia)
                    .addComponent(jTextFieldPaisProcedencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAceptar)
                    .addComponent(jButtonCancelar))
                .addGap(27, 27, 27))
        );

        jDesktopPane1.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldMatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMatriculaActionPerformed
        // TODO add your handling code here:
        evt.setSource((char) KeyEvent.VK_CLEAR);
        jTextFieldMarca.requestFocus();
    }//GEN-LAST:event_jTextFieldMatriculaActionPerformed

    private void jTextFieldMatriculaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMatriculaKeyTyped
        // TODO add your handling code here:
        if (jTextFieldMatricula.getText().length() >= 7) {
            evt.consume(); // No permite más de 7 caracteres
        }

        // Cambiar color a rojo si no tiene exactamente 7 caracteres
        if (jTextFieldMatricula.getText().length() < 6) {
            jTextFieldMatricula.setBackground(Color.pink);
        } else {
            jTextFieldMatricula.setBackground(Color.WHITE); // O el color por defecto
        }
    }//GEN-LAST:event_jTextFieldMatriculaKeyTyped

    private void jTextFieldMarcaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMarcaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldMarcaKeyTyped

    private void jComboBoxDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDestinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxDestinoActionPerformed

    private void jTextFieldHoraSalidaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldHoraSalidaKeyTyped
        // TODO add your handling code here:
        jTextFieldHoraSalida.setInputVerifier(entradaHora);

        char car = evt.getKeyChar();
        if ((car < '0' || car > '9') && car != ':')
        evt.consume();
    }//GEN-LAST:event_jTextFieldHoraSalidaKeyTyped

    private void jTextFieldCapacidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCapacidadKeyTyped
        // TODO add your handling code here:
        char car = evt.getKeyChar();
        if((car<'0' || car>'9'))
        evt.consume();
    }//GEN-LAST:event_jTextFieldCapacidadKeyTyped

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAceptarActionPerformed
        // TODO add your handling code here:
        if (emptyFields()) {
            String matricula = jTextFieldMatricula.getText();
            String marca = jTextFieldMarca.getText();
            String modelo = jTextFieldModelo.getText();
            int capacidad = Integer.parseInt(jTextFieldCapacidad.getText());
            String destino = jComboBoxDestino.getSelectedItem().toString();
            java.sql.Time horaSalida = java.sql.Time.valueOf(jTextFieldHoraSalida.getText());
            String paisProcedencia = jTextFieldPaisProcedencia.getText();
            String destinoActual = iServiciosOmnibus.obtenerDestinoPorMatricula(matricula);

            // Verificar si la matrícula tiene la longitud correcta
            if (matricula.length() == 7) {
                // Comprobar si la matrícula ya existe y no es la matrícula actual
                if (!matricula.equals(FormModificarOmnibus.matricula) && iServiciosOmnibus.isMatriculaExists(matricula)) {
                    JOptionPane.showMessageDialog(this, "La matrícula ya existe. Por favor, ingrese una matrícula diferente.");
                    return; // Detener el proceso si la matrícula ya existe
                }

                // Verificar si se está cambiando el destino
                if (!destino.equals(destinoActual)) {
                    // Comprobar si el ómnibus tiene tickets en fechas futuras
                    if (iServiciosOmnibus.verificarFechasFuturas(matricula)) {
                        JOptionPane.showMessageDialog(this, "No se puede cambiar el destino. El ómnibus tiene tickets en fechas futuras.");
                        return; // Detener el proceso si hay tickets en fechas futuras
                    }
                }
                
                if(jTextFieldHoraSalida.getText().length() == 8){
                    Omnibus omnibus = new Omnibus(matricula, marca, modelo, destino, capacidad, horaSalida, paisProcedencia);
                    String matriculaAntigua = FormModificarOmnibus.matricula;

                    // Intentar actualizar el ómnibus
                    boolean exito = iServiciosOmnibus.actualizarOmnibus(omnibus, matriculaAntigua);

                    if (exito) {
                        if(!constructorDesdeFormOmnibus){
                            JOptionPane.showMessageDialog(this, "Ómnibus actualizado con éxito.");
                            formBuscarOmnibus.llenarTablaOmnibusBuscados(destino);
                        }else{
                            JOptionPane.showMessageDialog(this, "Ómnibus actualizado con éxito.");
                            formOmnibus.llenarTablaOmnibus();
                        }    
                    } else {
                        JOptionPane.showMessageDialog(this, "No se pudo actualizar el ómnibus.");
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "El formato de la hora debe ser HH:MM:SS", "Advertencia", JOptionPane.WARNING_MESSAGE);
                }    
            } else {
                JOptionPane.showMessageDialog(this, "Faltan caracteres en la matrícula.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.");
        }
    }//GEN-LAST:event_jButtonAceptarActionPerformed

    private void jTextFieldMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMarcaActionPerformed
        // TODO add your handling code here:
        evt.setSource((char) KeyEvent.VK_CLEAR);
        jTextFieldModelo.requestFocus();
    }//GEN-LAST:event_jTextFieldMarcaActionPerformed

    private void jTextFieldModeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldModeloActionPerformed
        // TODO add your handling code here:
        evt.setSource((char) KeyEvent.VK_CLEAR);
        jTextFieldCapacidad.requestFocus();
    }//GEN-LAST:event_jTextFieldModeloActionPerformed

    private void jTextFieldCapacidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCapacidadActionPerformed
        // TODO add your handling code here:
        evt.setSource((char) KeyEvent.VK_CLEAR);
        jTextFieldHoraSalida.requestFocus();
    }//GEN-LAST:event_jTextFieldCapacidadActionPerformed

    private void jTextFieldHoraSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldHoraSalidaActionPerformed
        // TODO add your handling code here:
        evt.setSource((char) KeyEvent.VK_CLEAR);
        jTextFieldPaisProcedencia.requestFocus();
    }//GEN-LAST:event_jTextFieldHoraSalidaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormModificarOmnibus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormModificarOmnibus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormModificarOmnibus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormModificarOmnibus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FormModificarOmnibus dialog = new FormModificarOmnibus(new javax.swing.JDialog(), true, formOmnibus, matricula);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAceptar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JComboBox<String> jComboBoxDestino;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabelCapacidad;
    private javax.swing.JLabel jLabelDestino;
    private javax.swing.JLabel jLabelHoraSalida;
    private javax.swing.JLabel jLabelMarca;
    private javax.swing.JLabel jLabelMatricula;
    private javax.swing.JLabel jLabelModelo;
    private javax.swing.JLabel jLabelPaisProcedencia;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextFieldCapacidad;
    private javax.swing.JTextField jTextFieldHoraSalida;
    private javax.swing.JTextField jTextFieldMarca;
    private javax.swing.JTextField jTextFieldMatricula;
    private javax.swing.JTextField jTextFieldModelo;
    private javax.swing.JTextField jTextFieldPaisProcedencia;
    // End of variables declaration//GEN-END:variables

    
    private void llenarJTextFieldMatricula(){
        String matricula = FormModificarOmnibus.matricula;
        jTextFieldMatricula.setText(matricula);
    }
    
    private void llenarJTextFieldMarca(){
        String matricula = FormModificarOmnibus.matricula;
        String marca = iServiciosOmnibus.obtenerMarcaPorMatricula(matricula);
        jTextFieldMarca.setText(marca);
    }
    
    private void llenarJTextFieldModelo(){
        String matricula = FormModificarOmnibus.matricula;
        String modelo = iServiciosOmnibus.obtenerModeloPorMatricula(matricula);
        jTextFieldModelo.setText(modelo);
    }
    
    private void llenarJComboBoxDestino(){
        String matricula = FormModificarOmnibus.matricula;
        String destino = iServiciosOmnibus.obtenerDestinoPorMatricula(matricula);
        jComboBoxDestino.setSelectedItem(destino);
    }
    
    private void llenarJTextFieldCapacidad(){
        String matricula = FormModificarOmnibus.matricula;
        int capacidad = iServiciosOmnibus.obtenerCapacidadPorMatricula(matricula);
        jTextFieldCapacidad.setText(String.valueOf(capacidad));
    }
    
    private void llenarJTextFieldHoraSalida(){
        String matricula = FormModificarOmnibus.matricula;
        String horaSalida = iServiciosOmnibus.obtenerHoraSalidaPorMatricula(matricula);
        jTextFieldHoraSalida.setText(horaSalida);
        System.out.println(horaSalida);
    }
    
    private void llenarJTextFieldPaisProcedencia(){
        String matricula = FormModificarOmnibus.matricula;
        String paisProcedencia = iServiciosOmnibus.obtenerPaisProcedenciaPorMatricula(matricula);
        jTextFieldPaisProcedencia.setText(paisProcedencia);
    }
    
    private boolean emptyFields(){
         
        if(!jTextFieldMatricula.getText().equals("")
            &&!jTextFieldMarca.getText().equals("")
            &&!jTextFieldModelo.getText().equals("")
            &&!jTextFieldCapacidad.getText().equals("")
            &&!jTextFieldHoraSalida.getText().equals("")
            &&!jTextFieldPaisProcedencia.getText().equals(""))
            return true;
        else 
            return false;
    }
    
        
   
}
